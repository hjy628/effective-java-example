    枚举和注解

   java1.5新增了两个新的引用类型家族:    枚举类型(enum type)      注解类型(annotation type)


30: 用enum代替int常量
            枚举类型(enum type)是指由一组固定的常量组成合法值的类型。

            Java枚举类型背后的基本想法非常简单:它们就是通过公有的静态final域为每个枚举常量导出实例的类。因为没有可以访问的构造器，枚举类型是真正的final。


31:用实例域代替序数

32:用EnumSet代替位域
                如果一个枚举类型的元素主要用在集合中，一般就使用int枚举模式


33:用EnumMap代替序数索引

34:用接口模拟可伸缩的枚举


35:注解优先于命名模式
        jdk1.5发行版本之前，一般使用命名模式(naming pattern)表明有些程序元素需要通过某种工具或者框架进行特殊处理

        命名模式缺点:
            1: 文字拼写错误会导致失败，且没有任何提示。
            2:无法确保它们只用于相应的程序元素上
            3:它们没有提供将参数值和程序元素关联起来的好方法

36:坚持使用Override注解

37:用标记接口定义类型
        标记接口(marker interface)是没有包含方法声明的接口，而只是指明(或者标明)一个类实现了具有某种属性的接口。